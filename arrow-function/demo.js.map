{"version":3,"sources":["arrow-function/demo.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AACb,CAAC,YAAM;AACH,QAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACpB,WAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,UAAA,IAAI;eAAI,IAAI,GAAG,CAAC;KAAA,CAAC,CAAC;AAAC,AACvC,OAAG,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;eAAK,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;KAAA,CAAC,CAAC;AACvD,OAAG,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK,EAAK;;AACzB,YAAI,GAAG,IAAI,GAAG,CAAC,CAAC;AAChB,eAAO,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC;;AAAC,KAE5B,CAAC;;;AAAC,AAGH,KAAA,YAAM;AACF,YAAI,GAAG,GAAG;AACN,gBAAI,EAAE,OAAO;AACb,iBAAK,EAAE,iBAAM;AACT,0BAAU,CAAC;2BAAM,OAAO,CAAC,GAAG,CAAC,UAAK,IAAI,CAAC;iBAAA,EAAE,CAAC,CAAC;AAAC,aAC/C;SACJ,CAAA;KACJ,CAAA,CAAA;;AAED,aAAS,MAAM,CAAC,IAAI,EAAE;AAClB,YAAI,CAAC,IAAI,GAAG,IAAI,CAAC;KACpB;AACD,UAAM,CAAC,SAAS,CAAC,GAAG,GAAG,YAAK;AACxB,kBAAU,CAAC;mBAAM,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,UAAK,IAAI,CAAC;SAAA,EAAE,CAAC,CAAC;AAAC,KAC1D,CAAA;AACD,QAAI,KAAK,GAAG,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;AAChC,SAAK,CAAC,GAAG,EAAE,CAAC;CAEf,CAAA,EAAG,CAAC","file":"arrow-function/demo.js","sourcesContent":["\"use strict\";\n(() => {\n    var arr = [1, 2, 3];\n    console.log(arr.map(each => each * 2)); // 单个参数不需要括号\n    arr.forEach((each, index) => console.log(each, index));\n    arr.forEach((each, index) => { // 函数若是多行代码用 {} 包裹\n        each = each * 3;\n        console.log(each, index);\n        // console.log(arguments); 不能用 arguments\n    });\n\n    // this 的测试\n    () => {\n        var obj = {\n            name: 'Jacky',\n            doSth: () => {\n                setTimeout(() => console.log(this.name), 0);// 编译代码中 this 有问题\n            }\n        }\n    }\n\n    function Animal(name) {\n        this.name = name;\n    }\n    Animal.prototype.say = ()=> {\n        setTimeout(() => console.log('I am %s', this.name), 0);// 编译代码中 this 有问题\n    }\n    var tiger = new Animal('Tiger');\n    tiger.say();\n\n})();\n"],"sourceRoot":"/source/"}